load("@build_bazel_rules_nodejs//:defs.bzl", "npm_package")
load("//lib:rollup.bzl", "ES5_BUNDLES", "ES2015_BUNDLES")

exports_files([
    "tsconfig.json",
    "tsconfig-node.json",
    "angular_license.txt",
])

# # the es5 filegroups
# [
#     filegroup(
#         name = b + ".es5",
#         srcs = [":" + b],
#         output_group = "es5_umd",
#     )
#     for b in ES5_BUNDLES
# ]

# # the es5.min filegroups
# [
#     filegroup(
#         name = b + ".es5.min",
#         srcs = [":" + b],
#         output_group = "es5_umd_min",
#     )
#     for b in ES5_BUNDLES
# ]

# # the es2015 filegroups
# [
#     filegroup(
#         name = b + ".umd",
#         srcs = [":" + b],
#         output_group = "umd",
#     )
#     for b in ES2015_BUNDLES
# ]

# # the es2015.min filegroups
# [
#     filegroup(
#         name = b + ".umd.min",
#         srcs = [":" + b],
#         output_group = "umd_min",
#     )
#     for b in ES2015_BUNDLES
# ]

# # Extract and rename each es5 bundle to a .js and .min.js in the dist/ dir
# [
#   genrule(
#     name = b + "-dist",
#     srcs = [b + ".es5", b + ".es5.min"],
#     outs = ["dist/" + b + ".js", "dist/" + b + ".min.js"],
#     cmd = " && ".join([
#       "mkdir -p $(@D)/dist",
#       "mv $(locations //:" + b + ".es5) $(@D)/dist/",
#       "mv $(locations //:" + b + ".es5.min) $(@D)/dist/",
#       "mv $(@D)/dist/" + b + ".es5umd.js $(@D)/dist/" + b + ".js",
#       "mv $(@D)/dist/" + b + ".min.es5umd.js $(@D)/dist/" + b + ".min.js",
#     ])
#   )
#   for b in ES5_BUNDLES
# ]

# # Extract and rename each es2015 bundle to a .js and .min.js in the dist/ dir
# [
#   genrule(
#     name = b + "-dist",
#     srcs = [b + ".umd", b + ".umd.min"],
#     outs = ["dist/" + b + ".js", "dist/" + b + ".min.js"],
#     cmd = " && ".join([
#       "mkdir -p $(@D)/dist",
#       "mv $(locations //:" + b + ".umd) $(@D)/dist/",
#       "mv $(locations //:" + b + ".umd.min) $(@D)/dist/",
#       "mv $(@D)/dist/" + b + ".umd.js $(@D)/dist/" + b + ".js",
#       "mv $(@D)/dist/" + b + ".min.umd.js $(@D)/dist/" + b + ".min.js",
#     ])
#   )
#   for b in ES2015_BUNDLES
# ]

npm_package(
    name = "npm_package",
    srcs = [
        "CHANGELOG.md",
        "LICENSE",
        "LICENSE.wrapped",
        "README.md",
        "package.json",
    ],
    replacements = {
        # Since the bazel package is experimental, patch the version number
        # with a -bazel.0 suffix.
        "\"version\": \"([0-9\.]+)\"": "\"version\": \"$1-bazel.0\"",
    },
    deps = [
        "//dist:zone_externs",    
        "//lib"
    ] + [
        "//dist:" + b[0] for b in ES5_BUNDLES.items() + ES2015_BUNDLES.items()
    ]
    # [":" + b + "-dist" for b in ES5_BUNDLES] +
    #   [":" + b + "-dist" for b in ES2015_BUNDLES]
)
